// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in = load, sel = address[0..2], a = aOut, b = bOut, c = cOut, d = dOut, e = eOut, f = fOut, g = gOut, h = hOut);
    RAM64(in = in, load = aOut, out = outA, address = address[3..8]);
    RAM64(in = in, load = bOut, out = outB, address = address[3..8]);
    RAM64(in = in, load = cOut, out = outC, address = address[3..8]);
    RAM64(in = in, load = dOut, out = outD, address = address[3..8]);
    RAM64(in = in, load = eOut, out = outE, address = address[3..8]);
    RAM64(in = in, load = fOut, out = outF, address = address[3..8]);
    RAM64(in = in, load = gOut, out = outG, address = address[3..8]);
    RAM64(in = in, load = hOut, out = outH, address = address[3..8]);
    Mux8Way16(a = outA, b = outB, c = outC, d = outD, e = outE, f = outF, g = outG, h = outH, sel = address[0..2], out = out);
}